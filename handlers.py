import logging
from telegram import Update
from telegram.ext import ContextTypes
from openai_client import ask_chatgpt

logger = logging.getLogger(__name__)


async def handle_sticker(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.effective_message          # —É–¥–æ–±–Ω–∞—è –∫—Ä–∞—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞

    # ---------- –∏—â–µ–º —Å—Ç–∏–∫–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ –≤ —Ä–µ–ø–ª–∞–µ ----------
    sticker = msg.sticker
    if sticker is None and msg.reply_to_message:
        sticker = msg.reply_to_message.sticker

    if sticker is None:                     # –ø—Ä–∏—à—ë–ª —Ç–µ–∫—Å—Ç / —Ñ–æ—Ç–æ / —á—Ç–æ-—Ç–æ –µ—â—ë
        await msg.reply_text("–ì–¥–µ —Å—Ç–∏–∫–µ—Ä? üôÇ")
        return

    logger.info("Chat type: %s  |  user %s sent a sticker",
                msg.chat.type, update.effective_user.id)
    logger.debug("Sticker file_id: %s", sticker.file_id)

    # ---------- —Å–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ----------
    file = await context.bot.get_file(sticker.file_id)
    img_bytes = await file.download_as_bytearray()
    logger.info("Downloaded %d bytes", len(img_bytes))

    # ---------- —Å–æ—Ö—Ä–∞–Ω—è–µ–º ¬´–≤ –æ–∂–∏–¥–∞–Ω–∏–∏¬ª (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ----------
    context.user_data.setdefault("pending_photos", []).append(img_bytes)

    await msg.reply_text("–°—Ç–∏–∫–µ—Ä –ø–æ–ª—É—á–µ–Ω, –¥—É–º–∞—é...")

    # ---------- –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ ----------
    try:
        result = await ask_chatgpt(img_bytes)
    except Exception as exc:
        logger.exception("ask_chatgpt failed: %s", exc)
        await msg.reply_text("–ù–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ü§∑‚Äç‚ôÄÔ∏è")
        return

    await msg.reply_text(result)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info("User %s started the bot", update.effective_user.id)
    await update.message.reply_text("üëã –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç–∏–∫–µ—Ä –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å—Ç–∏–∫–µ—Ä, —É–ø–æ–º—è–Ω—É–≤ –º–µ–Ω—è.")
